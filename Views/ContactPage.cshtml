@using Crito.Controllers;
﻿@using Crito.Models;
@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.ContactPage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
	Layout = "LayoutWithBreadcrumb.cshtml";
    var contactForm = new Crito.Models.ContactForm();
}

<section class="contact-info-section">
    <div class="container">
        <div class="infobox">
            <div class="black-circle"><i class="fa-sharp fa-regular fa-location-dot"></i></div>
          
                <h5>Visit us</h5>
                <div class="info">
                <p>@Model.Value("contactinformationStreetName")</p>
                <p>@Model.Value("contactInformationPostalCode"), @Model.Value("contactInformationCity")</p>
            </div>
        </div>

        <div class="infobox">
            <div class="black-circle"><i class="fa-sharp fa-solid fa-phone"></i></div>
            <h5>Call us</h5>
            <div class="info">
                <p>@Model.Value("contactInformationEmail1")</p>
                <p>@Model.Value("contactInformationEmail2")</p>
            </div>
        </div>
      <div class="infobox">
            <div class="black-circle"><i class="fa-light fa-envelope"></i></div>
            <h5>Email us</h5>
            <div class="info">
                <p>@Model.Value("contactInformationEmail1")</p>
                <p>@Model.Value("contactInformationEmail2")</p>
            </div>
        </div>
    </div>
</section>

<section class="contactform-section">
    <div class="container">
        <h2>Leave us a message for any information.</h2>
        
        @using (Html.BeginUmbracoForm<ContactsController>("Index", "Contacts", FormMethod.Post))
        {

            <div asp-validation-summary="ModelOnly" ></div>

            <div class="name form-group">
                <label for="name"></label>
                <input asp-for="@contactForm.Name" id="name" type="text" placeholder="Name*" data-val="true" data-val-required="Name is required">
                <span asp-validation-for="@contactForm.Name" class="small text-danger"></span>
            </div>

            <div class="email form-group">
                <label for="email"></label>
                <input asp-for="@contactForm.Email" id="email" type="email" placeholder="Email" data-val="true" data-val-email="Invalid email address">
                <span asp-validation-for="@contactForm.Email" class="small text-danger"></span>
            </div>

            <div class="message form-group">
                <label for="message"></label>
                <textarea asp-for="@contactForm.Message" id="message" placeholder="Your Message" data-val="true" data-val-required="Message is required"></textarea>
                <span asp-validation-for="@contactForm.Message" class="small text-danger"></span>
            </div>

            <div class="d-grid">
                <button type="submit" class="btn-theme" onclick="return validateForm()">Send Message<i class="fa-solid fa-arrow-up-right"></i></button>
            </div>
        }
    </div>
</section>


<section class="googlemaps-section">
    <iframe class=" google-maps" src=@Model.Value("goggleMapURL") width="100%" height="450" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
</section>



  